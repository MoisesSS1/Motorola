import Head from "next/head";
import { useState } from "react";
import styled from "styled-components";
import Image from "next/image";
import AlertMessage, {
  AlertProps,
} from "@/components/AlertMessage/AlertMessage";
import { loginAdmin } from "@/services/functions/Admin/Login";
import { useRouter } from "next/router";

export default function Home() {
  const router = useRouter();

  const [dataAlert, setDataAlert] = useState<AlertProps>({
    type: null,
    message: null,
  });
  const [role, setRole] = useState<"user" | "admin">("user");
  const [login, setLogin] = useState("");
  const [password, setPassword] = useState("");

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    if (role === "admin") {
      const res = await loginAdmin({ login, password });

      if (res.type === "error") {
        setDataAlert({
          type: "error",
          message: res.message,
          key: new Date(),
        });
      } else {
        router.push("/admin");
      }
    }
  };

  return (
    <>
      <Head>
        <title>Chamados</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Container>
        <AlertMessage {...dataAlert} />
        <Card>
          <LogoWrapper>
            <Image
              src="/motorola.png"
              alt="Motorola"
              width={120}
              height={120}
            />
          </LogoWrapper>

          <ToggleContainer>
            <ToggleButton
              selected={role === "user"}
              onClick={() => setRole("user")}
            >
              Usu√°rio
            </ToggleButton>
            <ToggleButton
              selected={role === "admin"}
              onClick={() => setRole("admin")}
            >
              Admin
            </ToggleButton>
          </ToggleContainer>

          <Form onSubmit={handleSubmit}>
            <Input
              type="text"
              placeholder="Login"
              value={login}
              onChange={(e) => setLogin(e.target.value)}
            />
            <Input
              type="password"
              placeholder="Senha"
              value={password}
              onChange={(e) => setPassword(e.target.value)}
            />
            <SubmitButton type="submit">Entrar</SubmitButton>
          </Form>
        </Card>
      </Container>
    </>
  );
}

// ===== styled-components =====

const Container = styled.div`
  display: flex;
  align-items: center;
  justify-content: center;
  height: 100vh;
  background-color: #f4f4f4;
`;

const Card = styled.div`
  background: white;
  padding: 2rem;
  border-radius: 12px;
  box-shadow: 0px 4px 12px rgba(0, 0, 0, 0.1);
  width: 350px;
  text-align: center;
`;

const LogoWrapper = styled.div`
  margin-bottom: 1.5rem;
`;

const ToggleContainer = styled.div`
  display: flex;
  justify-content: space-between;
  margin-bottom: 1.5rem;
`;

const ToggleButton = styled.button<{ selected: boolean }>`
  flex: 1;
  margin: 0 5px;
  padding: 12px;
  border: none;
  border-radius: 8px;
  font-weight: 500;
  cursor: pointer;
  background-color: ${(props) => (props.selected ? "#0070f3" : "#e0e0e0")};
  color: ${(props) => (props.selected ? "white" : "black")};
  transition: background 0.2s ease;

  &:hover {
    background-color: ${(props) => (props.selected ? "#005bb5" : "#cfcfcf")};
  }
`;

const Form = styled.form`
  display: flex;
  flex-direction: column;
`;

const Input = styled.input`
  margin-bottom: 1rem;
  padding: 12px;
  border: 1px solid #ddd;
  border-radius: 8px;
  font-size: 16px;

  &:focus {
    outline: none;
    border-color: #0070f3;
  }
`;

const SubmitButton = styled.button`
  padding: 12px;
  border: none;
  border-radius: 8px;
  background-color: #0070f3;
  color: white;
  font-size: 16px;
  font-weight: 500;
  cursor: pointer;
  transition: background 0.2s ease;

  &:hover {
    background-color: #005bb5;
  }
`;
